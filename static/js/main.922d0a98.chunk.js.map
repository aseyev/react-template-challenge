{"version":3,"sources":["components/page.module.css","img/320×240.jpg","img/mockup-card.jpg","components/paginator.jsx","components/header.jsx","components/card.jsx","components/cardTest.jsx","components/cardsList.jsx","components/PageWrapper.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Paginator","pages","currentPage","className","s","paginator","button_current","button","button_next","Header","props","header","Card","card","img_block","img","src","mockup","alt","title","date_from","rating","price","CardTest","card_test","img_test","CardsList","cards_list","PageWrapper","page_wrapper","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,aAAe,2BAA2B,OAAS,qBAAqB,WAAa,yBAAyB,UAAY,wBAAwB,SAAW,uBAAuB,KAAO,mBAAmB,UAAY,wBAAwB,MAAQ,oBAAoB,UAAY,wBAAwB,OAAS,qBAAqB,MAAQ,oBAAoB,UAAY,wBAAwB,OAAS,qBAAqB,eAAiB,6BAA6B,YAAc,4B,qBCD5fD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,qNCY5BC,EATC,SAAC,GAA6B,EAA5BC,MAA4B,EAAnBC,YACvB,OAAO,yBAAKC,UAAWC,IAAEC,WACrB,yBAAKF,UAAWC,IAAEE,gBAAlB,KACA,yBAAKH,UAAWC,IAAEG,QAAlB,KACA,yBAAKJ,UAAWC,IAAEI,aAAlB,OCGOC,EAPF,SAACC,GACV,OAAO,yBAAKP,UAAWC,IAAEO,QACrB,6C,gBCoBOC,EArBJ,SAACF,GACR,OAAO,yBAAKP,UAAWC,IAAES,MACrB,yBAAKV,UAAWC,IAAEU,WACd,yBAAKX,UAAWC,IAAEW,IAAKC,IAAKC,IAAQC,IAAI,UAE5C,yBAAKf,UAAWC,IAAEe,OAAlB,OAGA,yBAAKhB,UAAWC,IAAEgB,WAAlB,QAGA,yBAAKjB,UAAWC,IAAEiB,QAAlB,UAGA,yBAAKlB,UAAWC,IAAEkB,OAAlB,W,gBCLOC,EATA,SAACb,GACZ,OAAO,yBAAKP,UAAWC,IAAEoB,WACrB,yBAAKrB,UAAWC,IAAEqB,UACd,yBAAKtB,UAAWC,IAAEW,IAAKC,IAAKC,IAAQC,IAAI,YCmBrCQ,EArBC,SAAChB,GAGb,OAAO,yBAAKP,UAAWC,IAAEuB,YACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCdKC,EAAb,iLAIQ,OAAO,yBAAKzB,UAAWC,IAAEyB,cACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,WAPZ,GAAiCC,IAAMC,WCMxBC,MARf,WACE,OACE,yBAAK7B,UAAU,OACb,kBAAC,EAAD,QCKc8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.922d0a98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_wrapper\":\"page_page_wrapper__6PxW5\",\"header\":\"page_header__2mXA8\",\"cards_list\":\"page_cards_list__1ZsNW\",\"card_test\":\"page_card_test__19bie\",\"img_test\":\"page_img_test__3FqlG\",\"card\":\"page_card__21gAS\",\"img_block\":\"page_img_block__3wID-\",\"title\":\"page_title__20Hm6\",\"date_from\":\"page_date_from__26vIV\",\"rating\":\"page_rating__35ZKN\",\"price\":\"page_price__363Ij\",\"paginator\":\"page_paginator__2ZI1N\",\"button\":\"page_button__1LqjM\",\"button_current\":\"page_button_current__sAhHE\",\"button_next\":\"page_button_next__3a4kL\"};","module.exports = __webpack_public_path__ + \"static/media/320×240.eec8ba1c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mockup-card.9c3e8757.jpg\";","import React from 'react';\r\nimport s from './page.module.css';\r\n\r\nlet Paginator = ({pages=2, currentPage=1}) => {\r\n    return <div className={s.paginator}>\r\n        <div className={s.button_current}>1</div>\r\n        <div className={s.button}>2</div>\r\n        <div className={s.button_next}>></div>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport s from './page.module.css';\r\n\r\nlet Header = (props) => {\r\n    return <div className={s.header}>\r\n        <p>1-12 from 23</p>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport s from './page.module.css';\r\nimport mockup from '../img/320×240.jpg';\r\n\r\nlet Card = (props) => {\r\n    return <div className={s.card}>\r\n        <div className={s.img_block}>\r\n            <img className={s.img} src={mockup} alt=\"logo\" />\r\n        </div>\r\n        <div className={s.title}>\r\n            txt\r\n        </div>\r\n        <div className={s.date_from}>\r\n            date\r\n        </div>\r\n        <div className={s.rating}>\r\n            rating\r\n        </div>\r\n        <div className={s.price}>\r\n            price\r\n        </div>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport s from './page.module.css';\r\nimport mockup from '../img/mockup-card.jpg';\r\n\r\nlet CardTest = (props) => {\r\n    return <div className={s.card_test}>\r\n        <div className={s.img_test}>\r\n            <img className={s.img} src={mockup} alt=\"logo\" />\r\n        </div>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default CardTest;\r\n","import React from 'react';\r\nimport s from './page.module.css';\r\nimport Card from './card';\r\nimport CardTest from './cardTest';\r\n\r\nlet CardsList = (props) => {\r\n    // console.log(props);\r\n    // console.log(props.props);\r\n    return <div className={s.cards_list}>\r\n        <Card/>\r\n        <Card/>\r\n        <CardTest/>\r\n        <CardTest/>\r\n        <CardTest/>\r\n        <CardTest/>\r\n        <CardTest/>\r\n        <CardTest/>\r\n        <CardTest/>\r\n        <CardTest/>\r\n        <CardTest/>\r\n        <CardTest/>\r\n        \r\n    </div>\r\n    \r\n}\r\n\r\nexport default CardsList;\r\n","import React from 'react';\r\nimport Paginator from './paginator';\r\nimport Header from './header';\r\nimport CardsList from './cardsList';\r\nimport s from './page.module.css';\r\n\r\nexport class PageWrapper extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return <div className={s.page_wrapper}>\r\n            <Header />\r\n            <CardsList />\r\n            <Paginator />\r\n        </div>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { PageWrapper } from './components/PageWrapper';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PageWrapper/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}