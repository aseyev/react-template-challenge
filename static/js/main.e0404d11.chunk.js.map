{"version":3,"sources":["components/page.module.css","img/mockup-card.jpg","img/circlesСircle.svg","components/paginator.jsx","components/header.jsx","components/card.jsx","components/cardTest.jsx","components/cardsList.jsx","components/PreloaderCircle.js","components/PageWrapper.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Paginator","pages","currentPage","className","s","paginator","button_current","button","button_next","Header","props","header","StarRating","stars","i","push","red","gray","rating","Card","data","card","img_block","img","src","alt","image_url","title","date_from","created_at","vote","price","CardTest","card_test","img_test","mockup","CardsList","cardsListing","map","p","cards_list","PreloaderCircle","preloader_position","Circle","PageWrapper","state","error","isLoaded","items","fetch","then","res","json","result","setState","this","console","log","page_wrapper","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0404d11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_wrapper\":\"page_page_wrapper__6PxW5\",\"header\":\"page_header__2mXA8\",\"cards_list\":\"page_cards_list__1ZsNW\",\"card_test\":\"page_card_test__19bie\",\"img_test\":\"page_img_test__3FqlG\",\"card\":\"page_card__21gAS\",\"img_block\":\"page_img_block__3wID-\",\"title\":\"page_title__20Hm6\",\"date_from\":\"page_date_from__26vIV\",\"rating\":\"page_rating__35ZKN\",\"price\":\"page_price__363Ij\",\"red\":\"page_red__1WOW6\",\"gray\":\"page_gray__1-oGi\",\"paginator\":\"page_paginator__2ZI1N\",\"button\":\"page_button__1LqjM\",\"button_current\":\"page_button_current__sAhHE\",\"button_next\":\"page_button_next__3a4kL\",\"preloader_position\":\"page_preloader_position__ukNoa\"};","module.exports = __webpack_public_path__ + \"static/media/mockup-card.9c3e8757.jpg\";","module.exports = __webpack_public_path__ + \"static/media/circlesСircle.78eb393d.svg\";","import React from 'react';\r\nimport s from './page.module.css';\r\n\r\nlet Paginator = ({pages=2, currentPage=1}) => {\r\n    return <div className={s.paginator}>\r\n        <div className={s.button_current}>1</div>\r\n        <div className={s.button}>2</div>\r\n        <div className={s.button_next}>></div>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport s from './page.module.css';\r\n\r\nlet Header = (props) => {\r\n    return <div className={s.header}>\r\n        <p>1-12 from 23</p>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport s from './page.module.css';\r\n\r\nlet Card = (props) => {\r\n\r\n    let data = props.props;\r\n\r\n    let Picture = (props) => {\r\n        return <div className={s.img_block}>\r\n            <img className={s.img} src={props.props} alt=\"loading\" />\r\n        </div>\r\n    }\r\n\r\n    return <div className={s.card}>\r\n        <Picture props={data.image_url} />\r\n        <div className={s.title}>\r\n            {data.title}\r\n        </div>\r\n        <div className={s.date_from}>\r\n            {data.created_at}\r\n        </div>\r\n        <StarRating props={data.vote} />\r\n        <div className={s.price}>\r\n            {data.price}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nlet StarRating = (props) => {\r\n    const stars = [];\r\n    for (let i = 0; i < 5; i++) {\r\n        let starColor = () => i < props.props ? s.red : s.gray;\r\n        stars.push(<div className={starColor()}>&#9733;</div>);\r\n    }\r\n    return <div className={s.rating}>\r\n        {stars}\r\n    </div>\r\n}\r\n\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport s from './page.module.css';\r\nimport mockup from '../img/mockup-card.jpg';\r\n\r\nlet CardTest = (props) => {\r\n    return <div className={s.card_test}>\r\n        <div className={s.img_test}>\r\n            <img className={s.img} src={mockup} alt=\"logo\" />\r\n        </div>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default CardTest;\r\n","import React from 'react';\r\nimport s from './page.module.css';\r\nimport Card from './card';\r\nimport CardTest from './cardTest';\r\n\r\nlet CardsList = (props) => {\r\n    let data=props.props;\r\n    let  cardsListing = data.map(p => <Card props={p} />);\r\n\r\n    return <div className={s.cards_list}>\r\n        <CardTest/>\r\n        {cardsListing}\r\n    </div>\r\n    \r\n}\r\n\r\nexport default CardsList;\r\n","import React from 'react';\r\nimport Circle from \"../img/circlesСircle.svg\";\r\nimport s from './page.module.css';\r\n\r\nlet PreloaderCircle = () => {\r\n    return <div className={s.preloader_position}>\r\n        <img src={Circle} alt={'loading...'}/>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default PreloaderCircle;","import React from 'react';\r\nimport Paginator from './paginator';\r\nimport Header from './header';\r\nimport CardsList from './cardsList';\r\nimport s from './page.module.css';\r\nimport PreloaderCircle from \"./PreloaderCircle\";\r\n\r\nexport class PageWrapper extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"./list.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        items: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        if ( !this.state.isLoaded ) {\r\n            return <PreloaderCircle />\r\n        }\r\n\r\n        console.log(this.state);\r\n\r\n        return <div className={s.page_wrapper}>\r\n            <Header />\r\n            <CardsList props={this.state.items}/>\r\n            <Paginator />\r\n        </div>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { PageWrapper } from './components/PageWrapper';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PageWrapper/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}